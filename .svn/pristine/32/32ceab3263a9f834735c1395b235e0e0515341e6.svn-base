<?php

require_once("includes/controller_included.php");

$args = $_REQUEST;
$timesheet = new TimesheetTwoWeeks();
$transaction = new TimesheetDay();

$transaction->startTrans();
$input_error = '';

$day_data = json_decode($args['json'], true);
$day_data = $timesheet->get_reprocessed_day($day_data, $validate = 'all', $success_message = "Saved");

if (empty($day_data['input_error'])) {

	$delete_array_TimeModified_db = $timesheet->get_delete_array_TimeModified_db();
	//TODO: check against time_period violation
	foreach ($delete_array_TimeModified_db as $TimeModified_obj) {
		$result = $TimeModified_obj->delete();
		if (PEAR::isError($result)) {
			$transaction->rollbackTrans();
			$day_data['error'] = "Could not delete a time modified record";
			$day_data['success'] = '';
			$status->message = $day_data;
			return $status;
		}
		log_entry("TimeModified", "DELETE", $TimeModified_obj->time_modified_id, $TimeModified_obj);
	}

	$save_array_TimeModified_db = $timesheet->get_save_array_TimeModified_db();
	foreach ($save_array_TimeModified_db as $TimeModified_obj) {
		$result = $TimeModified_obj->save();
		if (PEAR::isError($result)) {
			$transaction->rollbackTrans();
			$day_data['error'] = "Could not save a time modified record";
			$day_data['success'] = '';
			$status->message = $day_data;
			return $status;
		}
		log_entry("TimeModified", "ADD", $TimeModified_obj->time_modified_id, $TimeModified_obj);
	}

	$update_TimesheetDay_db = $timesheet->get_update_TimesheetDay_db($type = 'save');
	$existed = $update_TimesheetDay_db->exists;
	if (!empty($update_TimesheetDay_db)) {
		$result = $update_TimesheetDay_db->save();
		if (PEAR::isError($result)) {
			$transaction->rollbackTrans();
			$day_data['error'] = "Could not update a timesheet day record";
			$day_data['success'] = '';
			$status->message = $day_data;
			return $status;
		}
		log_entry("TimesheetDay", ($existed ? "UPDATE" : "ADD"), $update_TimesheetDay_db->timesheet_day_id, $update_TimesheetDay_db);
	}
} else {
	$day_data['success'] = ''; //TODO do all success messages in the model or in class (choose 1)
}

$transaction->commitTrans();
$status->message = $day_data;

$status->status = "Success";
return $status;
?>
