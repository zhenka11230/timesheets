<?php

require_once("includes/controller_included.php");

$args = $_REQUEST;
$timesheet = new TimesheetTwoWeeks();
$transaction = new TimesheetDay();

$timesheet->timesheet_period_id = $args['timesheet_period_id'];
$timesheet->employee_id = $args['employee_id'];
$up_hours_cut = $args['up_hours_cut'];
$down_hours_cut = $args['down_hours_cut'];

if (!preg_match("/^((?:1[0-2])|(?:0?[0-9])):([0-5][0-9])(\s)(am|pm)$/", $up_hours_cut) || !preg_match("/^((?:1[0-2])|(?:0?[0-9])):([0-5][0-9])(\s)(am|pm)$/", $up_hours_cut)) {
	$status->error = 'Invalid input';
	return $status;
}

try {
	$timesheet->init_selectively_from_db($overtime = false, $up_hours_cut, $down_hours_cut);
} catch (Exception $e) {
	$status->error = $e->getMessage();
	return $status;
}

$two_weeks_save_array_TimeModified_db = $timesheet->get_two_weeks_save_array_TimeModified_db($only_overtime = true);

if (empty($two_weeks_save_array_TimeModified_db)) {
	$status->error = "Nothing to trim.  Days that were modified are not trimmed.";
	return $status;
}
$transaction->startTrans();
foreach ($two_weeks_save_array_TimeModified_db as $TimeModified_obj) {
	$result = $TimeModified_obj->save();
	if (PEAR::isError($result)) {
		$transaction->rollbackTrans();
		$status->error = "Could not update a timesheet day record";
		return $status;
	}
	log_entry("TimeModified", "ADD", $TimeModified_obj->time_modified_id, $TimeModified_obj);
}
$transaction->commitTrans();
$status->message = $timesheet->get_timesheet_data();

$status->status = "Success";

return $status;
?>
